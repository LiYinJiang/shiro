
#定义用户
[users]
#${userName} = ${password}, ${roleName}
#gaki = 3354, admin
	
#Wuhu = 9527,codeManager
#定义角色
[roles]
#管理员什么都能做
#admin = *
#产品经理只能做产品管理
#codeManager = addCode,deleteCode,editCode,updateCode,listCode
#订单经理只能做订单管理
#featuresManager = addFeatures,deleteFeatures,editFeatures,updateFeatures,listFeatures

[main]
credentialsMatcher=org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName=md5
credentialsMatcher.hashIterations=2
credentialsMatcher.storedCredentialsHexEncoded=true
 
databaseRealm=eryingzhang.net.realm.DatabaseRealm
securityManager.realms=$databaseRealm
databaseRealm.credentialsMatcher=$credentialsMatcher


#当访问需要验证的页面，但是又没有验证的情况下，跳转到login.jsp
authc.loginUrl=/login.jsp
#当访问需要角色的页面，但是又不拥有这个角色的情况下，跳转到noroles.jsp
roles.unauthorizedUrl=/noRoles.jsp
#当访问需要权限的页面，但是又不拥有这个权限的情况下，跳转到noperms.jsp
perms.unauthorizedUrl=/noPerms.jsp

#users，roles和perms都通过前面知识点的数据库配置了
[users]  

#urls用来指定哪些资源需要什么对应的授权才能使用
[urls]  
#doLogout地址就会进行退出行为
/doLogout=logout
#login.jsp,noroles.jsp,noperms.jsp 可以匿名访问
/login.jsp=anon
/noroles.jsp=anon
/noperms.jsp=anon

#查询所有代码,需要登录后才可以查看
/listCode.jsp=authc  
#添加代码不仅需要登录，而且要拥有 codeManager 权限才可以操作
/deleteCode.jsp=authc,roles[CodeManager]  
#删除功能，不仅需要登录，而且要拥有 ["deleteFeatures"]   权限才可以操作
/deleteFeature.jsp=authc,perms["deleteFeatures"]   